#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const exec = require('child_process').exec;

const logger = require('./logger');
const { resolveLength, getRangeFromArg } = require('./utils');

module.exports = arg => {
  const batchArg = getRangeFromArg(arg, 'batch');
  const batchCmdArg = getRangeFromArg(arg, '--cmd');
  const exceptArg = getRangeFromArg(arg, '--except');
  resolveLength(batchArg, 'batch');
  resolveLength(batchCmdArg, '--cmd');
  const currentPath = batchArg[0]
    ? path.resolve(process.cwd(), batchArg[0])
    : process.cwd();
  const currentCmd = batchCmdArg[0];
  process.chdir(currentPath);
  let files = fs.readdirSync(currentPath);
  files.forEach(item => {
    let fPath = path.join(currentPath, item);
    let stat = fs.statSync(fPath);
    const bash = `cd ${fPath} && ${currentCmd}`;
    if (stat.isDirectory() === true) {
      if (exceptArg.includes(item)) {
        logger.success(`except folder : ${fPath}`, false, false, true);
      } else if (!/^\./.test(item)) {
        exec(bash, (error, stdout, stderr) => {
          if (error) {
            logger.err(`${error}`, false, false, false, true);
          } else {
            logger.success(
              `Executed cmd '${bash}' succeed : \n ${stdout}`,
              false,
              true,
              true
            );
          }
        });
      }
      //  else {
      //   logger.success('skip folder:' + fPath);
      // }
    }
    // if (stat.isFile() === true) {
    //   logger.success('skip file:' + fPath);
    // }
  });
};
